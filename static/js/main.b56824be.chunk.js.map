{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","components/ErrorBoundry.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","className","alt","src","id","name","email","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","Component","onSearchChange","event","setState","target","value","state","fetch","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCQCQ,EAbH,SAACC,GAET,OAEI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAK,wBAAwBH,EAAMI,GAAG,aACvD,gCACI,mCAAMJ,EAAMK,QACZ,4BAAIL,EAAMM,eCYXC,EAnBC,SAAC,GAAiB,IAAdC,EAAa,EAAbA,OAEVC,EAAeD,EAAOE,KAAI,SAACC,EAAKC,GAClC,OACA,cAAC,EAAD,CAEER,GAAII,EAAOI,GAAGR,GACdC,KAAMG,EAAOI,GAAGP,KAChBC,MAAOE,EAAOI,GAAGN,OAHZM,MAQX,OACI,8BACKH,KCHEI,EAbE,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC5B,OACI,qBAAKd,UAAU,MAAf,SACI,uBACGA,UAAU,mCACVe,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCAXI,EARF,SAACnB,GACV,OACI,qBAAKoB,MAAQ,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAArE,SACKvB,EAAMwB,YC+CJC,GCjDYC,Y,kDDOvB,aAAc,IAAD,8BACT,gBAaJC,eAAgB,SAACC,GACb,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAbzC,EAAKC,MAAQ,CACTxB,OAAQ,GACRM,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfmB,MAAM,8CACFxC,MAAK,SAAAyC,GAAQ,OAAIA,EAASC,UAC1B1C,MAAK,SAAA2C,GAAU,EAAKP,SAAS,CAAErB,OAAQ4B,S,oBAO/C,WAAU,IAAD,OACCC,EAAiBC,KAAKN,MAAMxB,OAAO+B,QAAO,SAAAC,GAC5C,OAAOA,EAAMnC,KAAKoC,cAAcC,SAAS,EAAKV,MAAMlB,YAAY2B,kBAEpE,OAAyB,IAArBH,KAAKN,MAAMxB,OACJ,yCAGH,sBAAKP,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWc,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACS,cAAC,EAAD,CAAWnB,OAAQ6B,a,GA/B9BX,cEClBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACK,cAAC,EAAD,MAELC,SAASC,eAAe,SAM1BzD,M","file":"static/js/main.b56824be.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card =(props) =>{\r\n    \r\n    return (\r\n        \r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='photo' src={'https://robohash.org/'+props.id+'?200x200'}/>\r\n            <div>\r\n                <h2> {props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;   ","import React from 'react';\r\nimport Card from '../components/Card';\r\n\r\nconst CardList =( { robots } ) =>{\r\n    \r\n    const cardComponent =robots.map((user,i) =>{\r\n        return (\r\n        <Card \r\n          key={i} \r\n          id={robots[i].id} \r\n          name={robots[i].name} \r\n          email={robots[i].email}\r\n          />\r\n        ); \r\n    })\r\n    \r\n    return (\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox= ({searchfield ,searchChange}) =>{\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n               className='pa3 ba b--green bg-lightest-blue' \r\n               type='search' \r\n               placeholder='search robots' \r\n               onChange= {searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nconst Scroll=(props)=>{\r\n    return (\r\n        <div style ={{overflowY: 'scroll' ,border :'1px solid black' ,height:'500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n};\r\nexport default Scroll;","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport {robots} from '../robots' ;\r\nimport SearchBox from '../components/SearchBox.js';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots :[],\r\n            searchfield :''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n           .then(response => response.json())\r\n           .then(users => {this.setState({ robots :users})})\r\n    }\r\n    \r\n    onSearchChange =(event) =>{\r\n        this.setState({searchfield :event.target.value})\r\n        \r\n    }\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        })\r\n        if (this.state.robots ===0){\r\n            return <h1>Loading</h1>\r\n        } else{\r\n            return (\r\n                <div className='tc'>\r\n                    <h1>RoboFrineds</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                             <CardList  robots={filteredRobots} />\r\n                    </Scroll>\r\n                    \r\n                </div>\r\n            );\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React  ,{Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            hasError :false\r\n        }\r\n    }\r\n    componentDidCatch(error ,info){\r\n        this.setState({hasError :true})\r\n\r\n    }\r\n\r\n\r\n\r\n    rensder(){\r\n        if(this.state.hasError){\r\n            return <h1>OOOOOps .This is not good</h1>\r\n        }\r\n        return this.props.children \r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport'tachyons'\n\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n       <App/>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}